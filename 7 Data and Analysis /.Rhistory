# Figure 1
p1 <- orchard_plot(m.area1, mod="Productivity.measure", group = "Productivity.measure", data=all_data, xlab = "Effect size", transfm = "none", angle=0)+
theme(axis.text = element_text(size = 19, colour ="black", face = "bold",
hjust = 0.5,
vjust = -0.5,
angle = 0))+
theme(axis.title = element_text(size = 19, colour ="black", face = "bold",
hjust = 0.5,
vjust = -0.5,
angle = 0))
p1
research_field <- metafor::rma.mv(yi = yi, V = vi, mods = ~Broad.research.field - 1, random = list(~1 |
Article.ID, ~1 | ID), data = all_data)
summary(research_field)
orchaRd::orchard_plot(research_field, mod = "Broad.research.field", group = "Article.ID", data = all_data, xlab = "Correlation coefficient",
alpha = 0.5, transfm = "tanh", angle = 45,  cb = FALSE)
authorship_position <- metafor::rma.mv(yi = yi, V = vi, mods = ~Specific.productivity.measure - 1, random = list(~1 |
Article.ID, ~1 | ID), data = all_data)
authorship_position <- metafor::rma.mv(yi = yi, V = vi, mods = ~Specific.productivity.measure - 1, random = list(~1 |
Article.ID, ~1 | ID), data = subset(all_data, all_data$Self.reported.or.measured=="Measured")
summary(authorship_position)
Article.ID, ~1 | ID), data = subset(all_data, all_data$Self.reported.or.measured=="Measured")
authorship_position <- metafor::rma.mv(yi = yi, V = vi, mods = ~Specific.productivity.measure - 1, random = list(~1 |
Article.ID, ~1 | ID), data = subset(all_data, all_data$Self.reported.or.measured=="Measured"))
summary(authorship_position)
orchaRd::orchard_plot(authorship_position, mod = "Specific.productivity.measure", group = "Article.ID", data = subset(all_data, all_data$Self.reported.or.measured=="Measured"), xlab = "Correlation coefficient",
alpha = 0.5, transfm = "tanh", angle = 45,  cb = FALSE)
authorship_position <- metafor::rma.mv(yi = yi, V = vi, mods = ~Broad.productivity.measure - 1, random = list(~1 |
Article.ID, ~1 | ID), data = subset(all_data))
summary(authorship_position)
orchaRd::orchard_plot(authorship_position, mod = "Broad.productivity.measure", group = "Article.ID", data = subset(all_data), xlab = "Correlation coefficient",
alpha = 0.5, transfm = "tanh", angle = 45,  cb = FALSE)
authorship_position <- metafor::rma.mv(yi = yi, V = vi, mods = ~Specific.productivity.measure - 1, random = list(~1 |
Article.ID, ~1 | ID), data = subset(all_data, all_data$Self.reported.or.measured=="Measured"))
summary(authorship_position)
orchaRd::orchard_plot(authorship_position, mod = "Specific.productivity.measure", group = "Article.ID", data = subset(all_data, all_data$Self.reported.or.measured=="Measured"), xlab = "Correlation coefficient",
alpha = 0.5, transfm = "tanh", angle = 45,  cb = FALSE)
meta_simple <- rma.mv(yi=yi, V=vi, data=subset(all_data))
funnel(meta_simple, level=c(90, 95, 99), shade=c("white", "gray", "darkgray"),
yaxis="seinv",xlab="effect size (Zr)",ylab="precision (1/SE)",digits=c(1,0),xlim=c(-2,2),ylim=c(1,45), legend=TRUE)
#For individual-level studies
meta_ind <- rma.mv(yi=yi, V=vi, data=subset(all_data, all_data$Study.type == "Self-reported"))
funnel(meta_ind, level=c(90, 95, 99), shade=c("white", "gray", "darkgray"),
yaxis="seinv",xlab="effect size (Zr)",ylab="precision (1/SE)",digits=c(1,0),xlim=c(-2,2),ylim=c(1,30))
#For population-level studies
meta_pop <- rma.mv(yi=yi, V=vi, data=subset(all_data, all_data$Study.type == "Measured"))
funnel(meta_pop, level=c(90, 95, 99), shade=c("white", "gray", "darkgray"),
yaxis="seinv",xlab="effect size (Zr)",ylab="precision (1/SE)",digits=c(1,0),xlim=c(-2,2),ylim=c(1,30))## Hypothesis 2: During pandemic conditions the gender gap in academic productivity has increased differentially across research fields.
meta_simple <- rma.mv(yi=yi, V=vi, data=all_data)
funnel(meta_simple, level=c(90, 95, 99), shade=c("white", "gray", "darkgray"),
yaxis="seinv",xlab="effect size (Zr)",ylab="precision (1/SE)",digits=c(1,0),xlim=c(-2,2),ylim=c(1,45), legend=TRUE)
#For individual-level studies
meta_ind <- rma.mv(yi=yi, V=vi, data=subset(all_data, all_data$Study.type == "Self-reported"))
funnel(meta_ind, level=c(90, 95, 99), shade=c("white", "gray", "darkgray"),
yaxis="seinv",xlab="effect size (Zr)",ylab="precision (1/SE)",digits=c(1,0),xlim=c(-2,2),ylim=c(1,30))
#For population-level studies
meta_pop <- rma.mv(yi=yi, V=vi, data=subset(all_data, all_data$Study.type == "Measured"))
funnel(meta_pop, level=c(90, 95, 99), shade=c("white", "gray", "darkgray"),
yaxis="seinv",xlab="effect size (Zr)",ylab="precision (1/SE)",digits=c(1,0),xlim=c(-2,2),ylim=c(1,30))
unique(all_data$Study.type)
#For studies with self-reported productivity
selfreported_data<-subset(all_data, all_data$Study.type == "Self-reported")
meta_simple <- rma.mv(yi=yi, V=vi, data=all_data)
funnel(meta_simple, level=c(90, 95, 99), shade=c("white", "gray", "darkgray"),
yaxis="seinv",xlab="effect size (Zr)",ylab="precision (1/SE)",digits=c(1,0),xlim=c(-2,2),ylim=c(1,45), legend=TRUE)
#For studies with self-reported productivity
selfreported_data<-subset(all_data, all_data$Study.type == "Self-reported")
meta_ind <- rma.mv(yi=yi, V=vi, data=selfreported_data)
funnel(meta_ind, level=c(90, 95, 99), shade=c("white", "gray", "darkgray"),
yaxis="seinv",xlab="effect size (Zr)",ylab="precision (1/SE)",digits=c(1,0),xlim=c(-2,2),ylim=c(1,30))
#For studies with measured productivity
measured_data<-subset(all_data, all_data$Study.type == "Measured")
meta_pop <- rma.mv(yi=yi, V=vi, data=subset(all_data, all_data$Study.type == "Measured"))
funnel(meta_pop, level=c(90, 95, 99), shade=c("white", "gray", "darkgray"),
yaxis="seinv",xlab="effect size (Zr)",ylab="precision (1/SE)",digits=c(1,0),xlim=c(-2,2),ylim=c(1,30))
meta_simple <- rma.mv(yi=yi, V=vi, data=all_data)
funnel(meta_simple, level=c(90, 95, 99), shade=c("white", "gray", "darkgray"),
yaxis="seinv",xlab="effect size (Zr)",ylab="precision (1/SE)",digits=c(1,0),xlim=c(-2,2),ylim=c(1,60), legend=TRUE)
#For studies with self-reported productivity
selfreported_data<-subset(all_data, all_data$Study.type == "Self-reported")
meta_ind <- rma.mv(yi=yi, V=vi, data=selfreported_data)
funnel(meta_ind, level=c(90, 95, 99), shade=c("white", "gray", "darkgray"),
yaxis="seinv",xlab="effect size (Zr)",ylab="precision (1/SE)",digits=c(1,0),xlim=c(-2,2),ylim=c(1,30))
#For studies with measured productivity
measured_data<-subset(all_data, all_data$Study.type == "Measured")
meta_pop <- rma.mv(yi=yi, V=vi, data=subset(all_data, all_data$Study.type == "Measured"))
funnel(meta_pop, level=c(90, 95, 99), shade=c("white", "gray", "darkgray"),
yaxis="seinv",xlab="effect size (Zr)",ylab="precision (1/SE)",digits=c(1,0),xlim=c(-2,2),ylim=c(1,30))
meta_simple <- rma.mv(yi=yi, V=vi, data=all_data)
funnel(meta_simple, level=c(90, 95, 99), shade=c("white", "gray", "darkgray"),
yaxis="seinv",xlab="effect size (Zr)",ylab="precision (1/SE)",digits=c(1,0),xlim=c(-2,2),ylim=c(1,80), legend=TRUE)
#For studies with self-reported productivity
selfreported_data<-subset(all_data, all_data$Study.type == "Self-reported")
meta_ind <- rma.mv(yi=yi, V=vi, data=selfreported_data)
funnel(meta_ind, level=c(90, 95, 99), shade=c("white", "gray", "darkgray"),
yaxis="seinv",xlab="effect size (Zr)",ylab="precision (1/SE)",digits=c(1,0),xlim=c(-2,2),ylim=c(1,80))
#For studies with measured productivity
measured_data<-subset(all_data, all_data$Study.type == "Measured")
meta_pop <- rma.mv(yi=yi, V=vi, data=subset(all_data, all_data$Study.type == "Measured"))
funnel(meta_pop, level=c(90, 95, 99), shade=c("white", "gray", "darkgray"),
yaxis="seinv",xlab="effect size (Zr)",ylab="precision (1/SE)",digits=c(1,0),xlim=c(-2,2),ylim=c(1,80))
funnel(meta_ind, level=c(90, 95, 99), shade=c("white", "gray", "darkgray"),
yaxis="seinv",xlab="effect size (Zr)",ylab="precision (1/SE)",digits=c(1,0),xlim=c(-2,2),ylim=c(1,100))
funnel(meta_simple, level=c(90, 95, 99), shade=c("white", "gray", "darkgray"),
yaxis="seinv",xlab="effect size (Zr)",ylab="precision (1/SE)",digits=c(1,0),xlim=c(-2,2),ylim=c(1,100), legend=TRUE)
is.data.frame(all_data)
funnel(meta_simple, level=c(90, 95, 99), shade=c("white", "gray", "darkgray"),
yaxis="seinv",xlab="effect size (Zr)",ylab="precision (1/SE)",digits=c(1,0),xlim=c(-2,2),ylim=c(1,150), legend=TRUE)
meta_simple <- rma.mv(yi=yi, V=vi, data=as.data.frame(all_data))
funnel(meta_simple, level=c(90, 95, 99), shade=c("white", "gray", "darkgray"),
yaxis="seinv",xlab="effect size (Zr)",ylab="precision (1/SE)",digits=c(1,0),xlim=c(-2,2),ylim=c(1,200), legend=TRUE)
is.data.frame(selfreported_data)
all_data$Productivity.measure[all_data$Productivity.measure=="Other"]<-Self-reported
all_data$Productivity.measure<-all_data$Broad.productivity.measure
all_data$Productivity.measure[all_data$Productivity.measure=="Other"]<-Self-reported
all_data$Productivity.measure[all_data$Productivity.measure=="Other"]<-"Self-reported"
all_data$Productivity.measure<-all_data$Broad.productivity.measure
all_data$Productivity.measure[all_data$Productivity.measure=="Other"]<-"Self-reported"
tapply(all_data$ID.observation, all_data$Productivity.measure, length)
m.area <- rma.mv(yi, vi, mods= ~ Productivity.measure, random=~1|ID.article/ID.observation, data=all_data)
m.area
m.area1 <- rma.mv(yi, vi, mods= ~ Productivity.measure-1, random=~1|ID.article/ID.observation, data=all_data)
m.area1
# Figure 1
p1 <- orchard_plot(m.area1, mod="Productivity.measure", group = "Productivity.measure", data=all_data, xlab = "Effect size", transfm = "none", angle=0)+
theme(axis.text = element_text(size = 19, colour ="black", face = "bold",
hjust = 0.5,
vjust = -0.5,
angle = 0))+
theme(axis.title = element_text(size = 19, colour ="black", face = "bold",
hjust = 0.5,
vjust = -0.5,
angle = 0))
p1
all_data$Productivity.measure<-all_data$Broad.productivity.measure
all_data$Productivity.measure[all_data$Productivity.measure=="Other"]<-"Questionnaire-reported"
tapply(all_data$ID.observation, all_data$Productivity.measure, length)
m.area <- rma.mv(yi, vi, mods= ~ Productivity.measure, random=~1|ID.article/ID.observation, data=all_data)
m.area
m.area1 <- rma.mv(yi, vi, mods= ~ Productivity.measure-1, random=~1|ID.article/ID.observation, data=all_data)
m.area1
# Figure 1
p1 <- orchard_plot(m.area1, mod="Productivity.measure", group = "Productivity.measure", data=all_data, xlab = "Effect size", transfm = "none", angle=0)+
theme(axis.text = element_text(size = 19, colour ="black", face = "bold",
hjust = 0.5,
vjust = -0.5,
angle = 0))+
theme(axis.title = element_text(size = 19, colour ="black", face = "bold",
hjust = 0.5,
vjust = -0.5,
angle = 0))
p1
# Figure 1
p1 <- orchard_plot(m.area1, mod="Productivity.measure", group = "Article.ID", data=all_data, xlab = "Effect size", transfm = "none", angle=0)+
theme(axis.text = element_text(size = 19, colour ="black", face = "bold",
hjust = 0.5,
vjust = -0.5,
angle = 0))+
theme(axis.title = element_text(size = 19, colour ="black", face = "bold",
hjust = 0.5,
vjust = -0.5,
angle = 0))
p1
\usepackage[utf8x]{inputenc}
library(knitr)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(tidy.opts = list(width.cutoff = 60), tidy = TRUE)
library(metafor)
library(readxl)
library(ggplot2)
library(formatR)
library(devtools)
library(tidyverse)
library(patchwork)
library(orchaRd)
## Load data with all papers
all_data<-read_xlsx("all_data.xlsx")
colnames(all_data) <- make.names(colnames(all_data), unique = TRUE)
### set effect sizes
all_data$Effect.size.used.in.MA<-as.numeric(all_data$Effect.size.used.in.MA)
all_data$Variance.used<-as.numeric(all_data$Variance.used)
all_data$vi <- all_data$Variance.used
all_data$yi <- all_data$Effect.size.used.in.MA
### data used for writing methods
table(all_data$Effect.size.kiran.use..from.Campbell.collaboration.)
table(all_data$Self.reported.or.measured)
table(all_data$Broad.research.field)
table(all_data$Broad.productivity.measure)
table(all_data$Broad.specific.productivity)
table(all_data$Specific.productivity.measure)
## install packages like so
install.packages("pacman")
pacman::p_load(devtools, tidyverse, metafor, patchwork, R.rsp, emmeans)
devtools::install_github("daniel1noble/orchaRd", force = TRUE, build_vignettes = TRUE)
library(orchaRd)
## install packages like so
install.packages("pacman")
library(orchaRd)
library(metafor)
library(readxl)
library(ggplot2)
library(formatR)
library(devtools)
library(tidyverse)
library(patchwork)
library(orchaRd)
## Load data with all papers
all_data<-read_xlsx("all_data.xlsx")
colnames(all_data) <- make.names(colnames(all_data), unique = TRUE)
### set effect sizes
all_data$Effect.size.used.in.MA<-as.numeric(all_data$Effect.size.used.in.MA)
all_data$Variance.used<-as.numeric(all_data$Variance.used)
all_data$vi <- all_data$Variance.used
all_data$yi <- all_data$Effect.size.used.in.MA
### data used for writing methods
table(all_data$Effect.size.kiran.use..from.Campbell.collaboration.)
table(all_data$Self.reported.or.measured)
table(all_data$Broad.research.field)
table(all_data$Broad.productivity.measure)
table(all_data$Broad.specific.productivity)
table(all_data$Specific.productivity.measure)
p1 <- orchard_plot(m ,group = "Article.ID", data=all_data, xlab = "Effect size", transfm = "none", angle=0)+
theme(axis.text = element_text(size = 19, colour ="black", face = "bold",
hjust = 0.5,
vjust = -0.5,
angle = 0))+
theme(axis.title = element_text(size = 19, colour ="black", face = "bold",
hjust = 0.5,
vjust = -0.5,
angle = 0))
View(lim)
orchaRd::orchard_plot(m, mod="1", data = english, group = "Article.ID", xlab = "Standardised mean difference",
transfm = "none")
orchaRd::orchard_plot(m, mod="1", data = english, group = "Article.ID", xlab = "Standardised mean difference", transfm = "none")
orchaRd::orchard_plot(m, mod="1", data = all_data, group = "Article.ID", xlab = "Standardised mean difference", transfm = "none")
#Article ID refers to the article ID number the effect size comes from
all_data$ID.article<-as.factor(all_data$Article.ID)
#ID refers to the unique effect size ID number
all_data$ID.observation<-as.factor(all_data$ID)
m
forest (m,  slab=all_data$Author, xlim=c(-2,2), ylim=c(-1, 120), digits= 2, xlab="Raw proportion", mlab="Overall effect (46)")
forest (m,  slab=all_data$Author, xlim=c(-2,2), ylim=c(-1, 120), digits= 2, xlab="Raw proportion", mlab="Overall effect (46)")
text(-1,122, "Author(s) and Year", pos=2, font=2, cex=0.8)
text(2,122, "Effect size [95% CI]", pos=2, font=2, cex=0.8)
orchaRd::orchard_plot(m, mod="1", data = all_data, group = "Article.ID", xlab = "Standardised mean difference", transfm = "none")
orchaRd::orchard_plot(m, mod="1", data = all_data, group = "Article.ID", xlab = "Standardised mean difference")
orchard_plot(m, mod="1", data = all_data, group = "Article.ID", xlab = "Standardised mean difference")
devtools::install_github("daniel1noble/orchaRd", force = TRUE, build_vignettes = TRUE)
setwd("~/Documents/GitHub/Has-the-COVID-19-pandemic-exacerbated-gender-biases-in-academic-productivity-/7 Data and Analysis ")
library(knitr)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(tidy.opts = list(width.cutoff = 60), tidy = TRUE)
library(metafor)
library(readxl)
library(ggplot2)
library(formatR)
library(devtools)
library(tidyverse)
library(patchwork)
library(orchaRd)
library(gridExtra)
all_data<-read_xlsx("all_data.xlsx")
colnames(all_data) <- make.names(colnames(all_data), unique = TRUE)
### set effect sizes
all_data$Effect.size.used.in.MA<-as.numeric(all_data$Effect.size.used.in.MA)
all_data$Variance.used<-as.numeric(all_data$Variance.used)
all_data$vi <- all_data$Variance.used
all_data$yi <- all_data$Effect.size.used.in.MA
### data used for writing methods
table(all_data$Effect.size.kiran.use..from.Campbell.collaboration.)
table(all_data$Self.reported.or.measured)
table(all_data$Broad.research.field)
table(all_data$Broad.productivity.measure)
table(all_data$Broad.specific.productivity)
table(all_data$Specific.productivity.measure)
all_data<-arrange(all_data, Effect.size.used.in.MA) # Order the data by effect size ID for plots
all_data$Effect.size.used.in.MA<-as.factor(all_data$Effect.size.used.in.MA)
### subset effect sizes using submission/publication output only
measured_data<-subset(all_data, all_data$Self.reported.or.measured == "Measured")
#Article ID refers to the article ID number the effect size comes from
all_data$ID.article<-as.factor(all_data$Article.ID)
#ID refers to the unique effect size ID number
all_data$ID.observation<-as.factor(all_data$ID)
#Custom settings for orchaRd plots borrowed from https://github.com/p-pottier/Dev_plasticity_thermal_tolerance/blob/main/Data_analysis/R/Statistical_analyses.Rmd
my.orchard<- function (object, mod = "1", group, data, xlab, N = "none",
alpha = 0.5, angle = 0, cb = FALSE, k = TRUE, g = TRUE,
trunk.size = 7, branch.size = 2, twig.size = 0.8, whisker, transfm = c("none", # increased point size, branch size, and added a whisker argument
"tanh"), condition.lab = "Condition", legend.pos = "bottom.right", k.pos = c("right",
"left"))
{
transfm <- match.arg(transfm)
if (any(class(object) %in% c("rma.mv", "rma"))) {
if (mod != "1") {
results <- orchaRd::mod_results(object, mod, group,
data)
}
else {
results <- orchaRd::mod_results(object, mod = "1",
group, data)
}
}
if (any(class(object) %in% c("orchard"))) {
results <- object
}
mod_table <- results$mod_table
data <- results$data
data$moderator <- factor(data$moderator, levels = mod_table$name,
labels = mod_table$name)
data$scale <- (1/sqrt(data[, "vi"]))
legend <- "Precision (1/SE)"
if (any(N != "none")) {
data$scale <- N
legend <- "Sample Size (N)"
}
if (transfm == "tanh") {
cols <- sapply(mod_table, is.numeric)
mod_table[, cols] <- Zr_to_r(mod_table[, cols])
data$yi <- Zr_to_r(data$yi)
label <- xlab
}
else {
label <- xlab
}
mod_table$K <- as.vector(by(data, data[, "moderator"],
function(x) length(x[, "yi"])))
mod_table$g <- as.vector(num_studies(data, moderator, stdy)[,
2])
group_no <- length(unique(mod_table[, "name"]))
cbpl <- c("#88CCEE", "#CC6677", "#DDCC77",
"#117733", "#332288", "#AA4499", "#44AA99",
"#999933", "#882255", "#661100", "#6699CC",
"#888888", "#E69F00", "#56B4E9", "#009E73",
"#F0E442", "#0072B2", "#D55E00", "#CC79A7",
"#999999")
if (names(mod_table)[2] == "condition") {
condition_no <- length(unique(mod_table[, "condition"]))
plot <- ggplot2::ggplot() + ggbeeswarm::geom_quasirandom(data = data,
ggplot2::aes(y = yi, x = moderator, size = scale,
colour = moderator), alpha = alpha) + ggplot2::geom_hline(yintercept = 0,
linetype = 2, colour = "black", alpha = alpha) +
ggplot2::geom_linerange(data = mod_table, ggplot2::aes(x = name,
ymin = lowerCL, ymax = upperCL), size = branch.size,
position = ggplot2::position_dodge2(width = 0.3)) +
ggplot2::geom_pointrange(data = mod_table, ggplot2::aes(y = estimate,
x = name, ymin = lowerPR, ymax = upperPR, shape = as.factor(condition),
fill = name), size = twig.size, position = ggplot2::position_dodge2(width = 0.3),
fatten = trunk.size) + ggplot2::scale_shape_manual(values = 20 +
(1:condition_no)) + ggplot2::coord_flip() + ggplot2::theme_bw() +
ggplot2::guides(fill = "none", colour = "none") +
ggplot2::theme(legend.position = c(0, 1), legend.justification = c(0,
1)) + ggplot2::theme(legend.title = ggplot2::element_text(size = 9)) +
ggplot2::theme(legend.direction = "horizontal") +
ggplot2::theme(legend.background = ggplot2::element_blank()) +
ggplot2::labs(y = label, x = "", size = legend) +
ggplot2::labs(shape = condition.lab) + ggplot2::theme(axis.text.y = ggplot2::element_text(size = 10,
colour = "black", hjust = 0.5, angle = angle))
}
else {
plot <- ggplot2::ggplot() + ggbeeswarm::geom_quasirandom(data = data,
ggplot2::aes(y = yi, x = moderator, size = scale,
fill = moderator), alpha = alpha, width=0.4, pch=21, stroke=1.1, col="black") + # Change point shape (21, with black borders)
ggplot2::geom_hline(yintercept = 0,
linetype = 2, colour = "black", alpha = 0.3, lwd=1.3) + # Change thickness 0 line
ggplot2::geom_errorbar(data = mod_table, ggplot2::aes(x = name,
ymin = lowerCL, ymax = upperCL), size = branch.size, width= whisker) + # Added variable whisker size
ggplot2::geom_pointrange(data = mod_table, ggplot2::aes(y = estimate,
x = name, ymin = lowerPR, ymax = upperPR, fill = name),
size = twig.size, fatten = trunk.size, shape = 23, stroke=2.2) + # Change point shape
scale_size_continuous(range = c(1, 14))+ # change point scaling
ggplot2::coord_flip() +
ggplot2::theme_bw() +
ggplot2::guides(fill = "none", colour = "none") +
ggplot2::theme(text=element_text(size=26, colour="black"))+ # Change font size
ggplot2::theme(legend.title = ggplot2::element_text(size = 16)) + # Increased font legend title
ggplot2::theme(legend.text = ggplot2::element_text(size = 14)) +
ggplot2::theme(legend.direction = "horizontal") +
ggplot2::theme(legend.background = ggplot2::element_blank()) +
ggplot2::labs(y = label, x = "", size = legend) +
ggplot2::theme(axis.text.y = ggplot2::element_text(size = 20,
colour = "black", hjust = 0.5, angle = angle)) + # Increased size title axis label
ggplot2::theme(axis.text.x = ggplot2::element_text(size = 20)) + # Increase size axis ticks
ggplot2::theme(panel.border = element_rect(colour = "black", fill=NA, size=1.3))
}
if (legend.pos == "bottom.right") {
plot <- plot + ggplot2::theme(legend.position = c(1,
0), legend.justification = c(1, 0))
}
else if (legend.pos == "bottom.left") {
plot <- plot + ggplot2::theme(legend.position = c(0,
0), legend.justification = c(0, 0))
}
else if (legend.pos == "top.right") {
plot <- plot + ggplot2::theme(legend.position = c(1,
1), legend.justification = c(1, 1))
}
else if (legend.pos == "top.left") {
plot <- plot + ggplot2::theme(legend.position = c(0,
1), legend.justification = c(0, 1))
}
else if (legend.pos == "top.out") {
plot <- plot + ggplot2::theme(legend.position = "top")
}
else if (legend.pos == "bottom.out") {
plot <- plot + ggplot2::theme(legend.position = "bottom")
}
if (cb == TRUE) {
plot <- plot + ggplot2::scale_fill_manual(values = cbpl) +
ggplot2::scale_colour_manual(values = cbpl)
}
if (k == TRUE && g == FALSE && k.pos == "right") {
plot <- plot + ggplot2::annotate("text", y = (max(data$yi) +
(max(data$yi) * 0.1)), x = (seq(1, group_no, 1) +
0.3), label = paste("italic(k)==", mod_table$K[1:group_no]), # Size changed to 5.5
parse = TRUE, hjust = "right", size = 6.5)
}
else if (k == TRUE && g == FALSE && k.pos == "left") {
plot <- plot + ggplot2::annotate("text", y = (min(data$yi) +
(min(data$yi) * 0.1)), x = (seq(1, group_no, 1) +
0.3), label = paste("italic(k)==", mod_table$K[1:group_no]),
parse = TRUE, hjust = "left", size = 6.5) # Size changed to 5.5
}
else if (k == TRUE && g == TRUE && k.pos == "right") {
plot <- plot + ggplot2::annotate("text", y = (max(data$yi) +
(max(data$yi) * 0.1)), x = (seq(1, group_no, 1) +
0.3), label = paste("italic(k)==", mod_table$K[1:group_no],
" (", mod_table$g[1:group_no], ")"),
parse = TRUE, hjust = "right", size = 6.5) # Size changed to 5.5
}
else if (k == TRUE && g == TRUE && k.pos == "left") {
plot <- plot + ggplot2::annotate("text", y = (min(data$yi) +
(min(data$yi) * 0.1)), x = (seq(1, group_no, 1) +
0.3), label = paste("italic(k)==", mod_table$K[1:group_no],
" (", mod_table$g[1:group_no], ")"),
parse = TRUE, hjust = "left", size = 6.5) # Size changed to 5.5
}
return(plot)
}
#Hierarchical mixed effect meta-analysis with all papers. Studies with multiple effect sizes are controlled for.
m<-rma.mv(yi, vi, random=~1|ID.article/ID.observation, data=all_data)
m
#Forest plot produced for visual representation.
forest (m,  slab=all_data$Author, xlim=c(-2,2), ylim=c(-1, 120), digits= 2, xlab="Raw proportion", mlab="Overall effect (46)")
text(-1,122, "Author(s) and Year", pos=2, font=2, cex=0.8)
text(2,122, "Effect size [95% CI]", pos=2, font=2, cex=0.8)
all_data$Broad.productivity.measure[all_data$Broad.productivity.measure=="Other"]<-"Survey"
tapply(all_data$ID.observation, all_data$Broad.productivity.measure, length)
all_data$Broad.productivity.measure.reordered<-factor(all_data$Broad.productivity.measure, c("Publications", "Submissions", "Survey"))
m.area <- rma.mv(yi, vi, mods= ~ Broad.productivity.measure.reordered, random=~1|ID.article/ID.observation, data=all_data)
m.area
m.area1 <- rma.mv(yi, vi, mods= ~ Broad.productivity.measure.reordered-1, random=~1|ID.article/ID.observation, data=all_data)
m.area1
all_data$Broad.research.field.reordered<-factor(all_data$Broad.research.field, c("TEMCP","Biological sciences", "Medicine", "Multidisciplinary", "Social sciences"))
levels(all_data$Broad.research.field.reordered) <- gsub(" ", "\n", levels(all_data$Broad.research.field.reordered))
research_field <- metafor::rma.mv(yi = yi, V = vi, mods = ~Broad.research.field.reordered, random = list(~1 |
Article.ID, ~1 | ID), data = all_data)
summary(research_field)
research_field1 <- metafor::rma.mv(yi = yi, V = vi, mods = ~Broad.research.field.reordered - 1, random = list(~1 |
Article.ID, ~1 | ID), data = all_data)
summary(research_field1)
all_data$nwomenprepandemic<-round(as.numeric(all_data$X..women.authors.pre.pandemic)*as.numeric(all_data$n.pre.pandemic), digits=0)
all_data$nmenprepandemic<-round(as.numeric(all_data$n.pre.pandemic)-as.numeric(all_data$nwomenprepandemic), digits=0)
all_data$nwomenduringpandemic<-round(as.numeric(all_data$X..women.authors.during.pandemic)*as.numeric(all_data$n.during.pandemic), digits=0)
all_data$nmenduringpandemic<-round(as.numeric(all_data$n.during.pandemic)-as.numeric(all_data$nwomenduringpandemic), digits=0)
previous_bias <- metafor::rma.mv(yi = yi, V = vi, mods = ~ cbind(nmenprepandemic/nwomenprepandemic), random = list(~1 |
Article.ID, ~1 | ID), data = subset(all_data, all_data$Self.reported.or.measured=="Measured"))
#Model suggests that contrary to our prediction, the pandemic has increased the gender gap more for research fields of a given authorship position that were previously less biased.
summary(previous_bias)
measured_data$X..women.authors.pre.pandemic<-as.numeric(measured_data$X..women.authors.pre.pandemic)
measured_data$X..women.authors.during.pandemic<-as.numeric(measured_data$X..women.authors.during.pandemic)
measured_data<-subset(measured_data, !is.na(measured_data$X..women.authors.pre.pandemic))
measured_data<-subset(measured_data, !is.na(measured_data$X..women.authors.during.pandemic))
socialsciences<-subset(measured_data, measured_data$Broad.research.field=="Social sciences")
medicine<-subset(measured_data, measured_data$Broad.research.field=="Medicine")
multi<-subset(measured_data, measured_data$Broad.research.field=="Multidisciplinary")
temcp<-subset(measured_data, measured_data$Broad.research.field=="TEMCP technology, engineering, mathematic, chemistry and physics")
bio<-subset(measured_data, measured_data$Broad.research.field=="Biological sciences")
socialsciences$X..women.authors.pre.pandemic<-as.numeric(socialsciences$X..women.authors.pre.pandemic)
socialsciences$X..women.authors.during.pandemic<-as.numeric(socialsciences$X..women.authors.during.pandemic)
mean((socialsciences$X..women.authors.pre.pandemic))
mean((socialsciences$X..women.authors.during.pandemic))
mean((medicine$X..women.authors.pre.pandemic))
mean((medicine$X..women.authors.during.pandemic))
mean((multi$X..women.authors.pre.pandemic))
mean((multi$X..women.authors.during.pandemic))
mean((temcp$X..women.authors.pre.pandemic))
mean((temcp$X..women.authors.during.pandemic))
mean((bio$X..women.authors.pre.pandemic))
mean((bio$X..women.authors.during.pandemic))
all_data$Broad.research.field.reordered.opposite<-factor(all_data$Broad.research.field, c( "Social sciences","Multidisciplinary","Medicine","Biological sciences","TEMCP" ))
all_data_long<-all_data
all_data_long$X..women.authors.before.pandemic<-all_data_long$X..women.authors.pre.pandemic
all_data_long$X..women.authors.before.pandemic<-as.numeric(all_data_long$X..women.authors.before.pandemic)
all_data_long$X..women.authors.during.pandemic<-as.numeric(all_data_long$X..women.authors.during.pandemic)
all_data_long <- pivot_longer(all_data_long, c(X..women.authors.before.pandemic, X..women.authors.during.pandemic), names_to = "Period")
#This plot shows the above model about how previous gender bias influence gender bias during the pandemic
ggplot(all_data_long, aes(x=factor(Period), y=as.numeric(value), color=factor(Broad.research.field),  group = ID)) +
geom_point(position = position_jitter(width = .0)) +
geom_smooth(method = 'lm', se = FALSE) +
labs(
x = "x",
color = "Broad.research.field"
)
all_data_long$Period[all_data_long$Period == 'X..women.authors.before.pandemic']<-'Before pandemic'
all_data_long$Period[all_data_long$Period == 'X..women.authors.during.pandemic']<-'During pandemic'
all_data_long$'Broad research field'<-all_data_long$Broad.research.field.reordered
p1 <- my.orchard(m.area1, mod="Broad.productivity.measure.reordered", group = "Article.ID", data=all_data, xlab = "Effect size", whisker=0.05,transfm = "none")+
annotate("text", size=6, y=0.6, x=3.09, label=paste("-0.193 [-0.273, -0.113]"))+
annotate("text", size=6, y=0.6, x=2.09, label=paste("-0.046 [-0.082, -0.009]"))+
annotate("text", size=6, y=0.6, x=1.09, label=paste("-0.039 [-0.076, -0.001]"))+
scale_fill_manual(values=c("#785EF0","#DC267F","#FE6100"))
p1
ggsave("figure2.png")
